service: ${env:NAME, file(./package.json):name}
variablesResolutionMode: 20210326
custom:
  local_env: ${sls:stage, 'test'}
  customDomain:
    domainName: ${env:SWAGGER, file(./.env/env.${self:custom.local_env}.json):SWAGGER}
    basePath: ''
    stage: ${sls:stage}
    createRoute53Record: true
  apigwBinary:
    types:
      - 'multipart/form-data'
      - 'image/jpeg'
      - 'image/png'
provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  timeout: 30
  lambdaHashingVersion: 20201221
  environment:
    NODE_ENV: ${env:NODE_ENV, file(./.env/env.${self:custom.local_env}.json):NODE_ENV}
    SWAGGER: ${env:SWAGGER, file(./.env/env.${self:custom.local_env}.json):SWAGGER}
    PROTOCOL: ${env:PROTOCOL, file(./.env/env.${self:custom.local_env}.json):PROTOCOL}
    MONGO: ${env:MONGO, file(./.env/env.${self:custom.local_env}.json):MONGO}
    CORE_EOS_ISSUER: ${env:CORE_EOS_ISSUER, file(./.env/env.${self:custom.local_env}.json):CORE_EOS_ISSUER}
    CORE_EOS_PLATFORM_ID: ${env:CORE_EOS_PLATFORM_ID, file(./.env/env.${self:custom.local_env}.json):CORE_EOS_PLATFORM_ID}
    CORE_THIS_SERVICE_CC_AUTHORITY: ${env:CORE_THIS_SERVICE_CC_AUTHORITY, file(./.env/env.${self:custom.local_env}.json):CORE_THIS_SERVICE_CC_AUTHORITY}
    CORE_THIS_SERVICE_CLIENT_ID: ${env:CORE_THIS_SERVICE_CLIENT_ID, file(./.env/env.${self:custom.local_env}.json):CORE_THIS_SERVICE_CLIENT_ID}
    CORE_THIS_SERVICE_CLIENT_SECRET: ${env:CORE_THIS_SERVICE_CLIENT_SECRET, file(./.env/env.${self:custom.local_env}.json):CORE_THIS_SERVICE_CLIENT_SECRET}
    CORE_ASSOCIATED_PRODUCT_ID: ${env:CORE_ASSOCIATED_PRODUCT_ID, file(./.env/env.${self:custom.local_env}.json):CORE_ASSOCIATED_PRODUCT_ID}
package:
  patterns:
    - '!src/**'

plugins:
  - serverless-domain-manager
  - serverless-apigw-binary

functions:
  app:
    handler: dist/slsapp.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'